---
name: "App Tests"

"on": # yamllint disable-line rule:truthy
  pull_request:
  push:
    branches:
      - main
  merge_group:
    types: [checks_requested]

jobs:
  seclint:
    name: "Security Checks & Linters"
    runs-on: "ubuntu-latest"
    env:
      BUNDLE_PATH: "vendor/bundle"
    steps:
      - uses: "actions/checkout@v4"
      - uses: "ruby/setup-ruby@v1"
        with:
          bundler-cache: true
      - name: "Bundler Audit"
        run: "bundle exec bundle-audit --update"
      - name: "Brakeman"
        run: "bundle exec brakeman --quiet"
      - name: "StandardRB Check"
        run: "bundle exec standardrb"
      - name: "ERB Check"
        run: "bundle exec erb_lint app/views --lint-all"
      - name: "YAML Lint"
        run: "yamllint -c .yamllint ."

  specs:
    name: "App Specs"
    runs-on: "ubuntu-latest"
    permissions:
      contents: read
      pull-requests: write
    env:
      BUNDLE_PATH: "vendor/bundle"
      RAILS_ENV: test
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: test
        ports: ["5432:5432"]
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: "actions/checkout@v4"
      - name: "Update VERSION"
        env:
          VERSION: ${{ github.event.pull_request.head.sha }}
        run: |
          echo "${VERSION}" >> VERSION

      - name: "Set timezone"
        run: |
          sudo timedatectl set-timezone Europe/London

      - name: "Install xvfb"
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb libvips
          export DISPLAY=':99.0'
          Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
      - name: "Setup Ruby"
        uses: "ruby/setup-ruby@v1"
        with:
          bundler-cache: true

      - name: "Setup test environment"
        env:
          DATABASE_URL: "postgres://postgres:password@localhost:5432/test"
          REDIS_URL: "redis://localhost:6379/0"
          RAILS_ENV: "test"
          PG_USER: "postgres"
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
          PT_SILENCE_AR_COMPAT_WARNING: true
        run: |
          bundle exec rails db:create
          bundle exec rails db:schema:load

      - name: "Compile assets"
        working-directory: spec/dummy
        env:
          DATABASE_URL: "postgres://postgres:password@localhost:5432/test"
          RAILS_ENV: test
        run: |
          # Compile Core assets first
          bundle exec rake panda:core:assets:compile || echo "Core assets compilation not available"
          # Then compile CMS assets
          bundle exec rake panda:cms:assets:compile
          echo "âœ… Asset compilation complete"

      - name: "Verify compiled assets"
        run: |
          echo "Compiled assets in tmp:"
          ls -la spec/dummy/tmp/panda_cms_assets/
          echo ""
          echo "Assets copied to test location:"
          ls -la spec/dummy/public/panda-cms-assets/
          echo ""
          echo "Asset sizes:"
          du -h spec/dummy/public/panda-cms-assets/*
          echo ""
          echo "JavaScript bundle first 10 lines:"
          head -10 spec/dummy/public/panda-cms-assets/panda-cms-0.7.4.js
          echo ""
          echo "JavaScript bundle last 10 lines:"
          tail -10 spec/dummy/public/panda-cms-assets/panda-cms-0.7.4.js
          echo ""
          echo "Bundle size and key content check:"
          wc -l spec/dummy/public/panda-cms-assets/panda-cms-0.7.4.js
          grep -c "pandaCmsLoaded" spec/dummy/public/panda-cms-assets/panda-cms-0.7.4.js || echo "pandaCmsLoaded not found"
          grep -c "Stimulus.register" spec/dummy/public/panda-cms-assets/panda-cms-0.7.4.js || echo "Stimulus.register not found"
          echo ""
          echo "Check for specific initialization variables:"
          grep "pandaCmsStimulus" spec/dummy/public/panda-cms-assets/panda-cms-0.7.4.js || echo "pandaCmsStimulus not found"
          grep "window\." spec/dummy/public/panda-cms-assets/panda-cms-0.7.4.js | head -5
          echo ""
          echo "Check if Rails can serve the asset correctly:"
          cd spec/dummy
          timeout 10s bundle exec rails runner "puts 'Rails can load the asset: ' + File.exist?(Rails.public_path.join('panda-cms-assets/panda-cms-0.7.4.js')).to_s"
          echo "Asset file permissions:"
          ls -la public/panda-cms-assets/panda-cms-0.7.4.js

      - name: "Run tests"
        env:
          DATABASE_URL: "postgres://postgres:password@localhost:5432/test"
          REDIS_URL: "redis://localhost:6379/0"
          RAILS_ENV: "test"
          PG_USER: "postgres"
          PANDA_CMS_USE_GITHUB_ASSETS: "false"
          CAPYBARA_ARTIFACTS: "../tmp/capybara"
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
          PT_SILENCE_AR_COMPAT_WARNING: true
          DEBUG: "true"
          FERRUM_INTERMITTENT_SLEEP: "0.5"
        run: |
          mkdir -p tmp
          mkdir -p test-results
          # Run tests and capture all output to file
          xvfb-run -a bundle exec rspec --tag ~skip --format documentation 2>&1 | tee test-results/test-output.log
          # Capture exit code from the pipeline
          TEST_EXIT_CODE=${PIPESTATUS[0]}
          echo $TEST_EXIT_CODE > test-results/exit-code.txt
          # Also create a summary
          echo "Test run completed at $(date)" > test-results/summary.txt
          echo "Exit code: $TEST_EXIT_CODE" >> test-results/summary.txt
          tail -20 test-results/test-output.log >> test-results/summary.txt
          # Exit with the actual test exit code
          exit $TEST_EXIT_CODE
      - name: Display test summary
        if: always()
        run: |
          echo "=== Test Summary ==="
          cat test-results/summary.txt || echo "No summary found"
          echo ""
          echo "=== Last 50 lines of test output ==="
          tail -50 test-results/test-output.log || echo "No test output found"

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            test-results/
            spec/tmp/capybara/
          if-no-files-found: ignore
          retention-days: 7

      - name: Keep screenshots from failed system tests
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: screenshots
          path: ${{ github.workspace }}/spec/tmp/capybara
          if-no-files-found: ignore
