---
name: "App Tests"

"on": # yamllint disable-line rule:truthy
  pull_request:
  push:
    branches:
      - main
  merge_group:
    types: [checks_requested]

jobs:
  seclint:
    name: "Security Checks & Linters"
    runs-on: "ubuntu-latest"
    env:
      BUNDLE_PATH: "vendor/bundle"
    steps:
      - uses: "actions/checkout@v4"
      - uses: "ruby/setup-ruby@v1"
        with:
          bundler-cache: true
      - name: "Bundler Audit"
        run: "bundle exec bundle-audit --update"
      - name: "Brakeman"
        run: "bundle exec brakeman --quiet"
      - name: "StandardRB Check"
        run: "bundle exec standardrb"
      - name: "ERB Check"
        run: "bundle exec erb_lint app/views --lint-all"
      - name: "YAML Lint"
        run: "yamllint -c .yamllint ."

  specs:
    name: "App Specs"
    runs-on: "ubuntu-latest"
    permissions:
      contents: read
      pull-requests: write
    env:
      BUNDLE_PATH: "vendor/bundle"
      RAILS_ENV: test
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: test
        ports: ["5432:5432"]
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: "actions/checkout@v4"
      - name: "Update VERSION"
        env:
          VERSION: ${{ github.event.pull_request.head.sha }}
        run: |
          echo "${VERSION}" >> VERSION
      - name: "Set timezone"
        run: |
          sudo timedatectl set-timezone Europe/London
      - name: "Install xvfb"
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb libvips
          export DISPLAY=':99.0'
          Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &

      - name: "Setup Ruby"
        uses: "ruby/setup-ruby@v1"
        with:
          bundler-cache: true
      - name: "Setup test environment"
        env:
          DATABASE_URL: "postgres://postgres:password@localhost:5432/test"
          REDIS_URL: "redis://localhost:6379/0"
          RAILS_ENV: "test"
          PG_USER: "postgres"
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
          PT_SILENCE_AR_COMPAT_WARNING: true
        run: |
          bundle exec rails db:prepare
      - name: "Run environment debug script"
        env:
          DATABASE_URL: "postgres://postgres:password@localhost:5432/test"
          RAILS_ENV: "test"
          GITHUB_ACTIONS: "true"
        run: |
          bundle exec rails runner bin/ci_debug
      - name: "Setup GitHub-hosted assets for testing"
        env:
          PANDA_CMS_USE_GITHUB_ASSETS: "true"
        run: |
          echo "Using GitHub-hosted assets for testing"
          echo "Asset loading will be handled by Panda::CMS::AssetLoader"
          echo "No local asset compilation needed"

      - name: "Run tests with GitHub-hosted assets"
        env:
          DATABASE_URL: "postgres://postgres:password@localhost:5432/test"
          REDIS_URL: "redis://localhost:6379/0"
          RAILS_ENV: "test"
          PG_USER: "postgres"
          PANDA_CMS_USE_GITHUB_ASSETS: "true"
          CAPYBARA_ARTIFACTS: "../tmp/capybara"
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
          PT_SILENCE_AR_COMPAT_WARNING: true
          CUPRITE_DEBUG: "true"
          GITHUB_ACTIONS: "true"
        run: |
          mkdir -p tmp
          set -o pipefail
          xvfb-run -a bundle exec rails db:prepare && bundle exec rspec spec/system/panda/cms/admin/my_profile_spec.rb --tag ~skip -f j -o tmp/rspec_results.json -f p 2>&1 | tee tmp/debug_output.log
      - name: Keep screenshots from failed system tests
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: screenshots
          path: ${{ github.workspace }}/spec/tmp/capybara
          if-no-files-found: ignore
      - name: Keep debug files from failed tests
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: debug-files
          path: |
            ${{ github.workspace }}/tmp/test_debug_*.html
            ${{ github.workspace }}/spec/tmp/capybara/*.html
            ${{ github.workspace }}/spec/dummy/log/test.log
            ${{ github.workspace }}/tmp/debug_output.log
            ${{ github.workspace }}/tmp/rspec_results.json
          if-no-files-found: ignore
