---
name: "App Tests"

"on": # yamllint disable-line rule:truthy
  pull_request:
  push:
    branches:
      - main
  merge_group:
    types: [checks_requested]

jobs:
  seclint:
    name: "Security Checks & Linters"
    runs-on: "ubuntu-latest"
    container:
      image: ghcr.io/tastybamboo/panda-ci:ruby-3.4.5
    env:
      BUNDLE_PATH: "vendor/bundle"
    steps:
      - uses: "actions/checkout@v5"

      - name: "Cache gems"
        uses: actions/cache@v4
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-lint-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-lint-
            ${{ runner.os }}-gems-

      - name: "Bundle install"
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: "Bundler Audit"
        run: "bundle exec bundle-audit --update"
      - name: "Brakeman"
        run: "bundle exec brakeman --quiet"
      - name: "StandardRB Check"
        run: "bundle exec standardrb"
      - name: "ERB Check"
        run: "bundle exec erb_lint app/views --lint-all"
      - name: "YAML Lint"
        run: "yamllint -c .yamllint ."

  specs:
    name: "App Specs"
    runs-on: "ubuntu-latest"
    container:
      image: ghcr.io/tastybamboo/panda-ci:ruby-3.4.5
    permissions:
      contents: read
      pull-requests: write
    env:
      BUNDLE_PATH: "vendor/bundle"
      RAILS_ENV: test
      DISPLAY: ':99'
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: "actions/checkout@v5"
      - name: "Update VERSION"
        env:
          VERSION: ${{ github.event.pull_request.head.sha }}
        run: |
          echo "${VERSION}" >> VERSION

      - name: "Start Xvfb"
        run: |
          Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &

      - name: "Cache gems"
        uses: actions/cache@v4
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-test-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-test-
            ${{ runner.os }}-gems-

      - name: "Bundle install"
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: "Cache assets"
        uses: actions/cache@v4
        with:
          path: |
            spec/dummy/public/panda-cms-assets
            spec/dummy/tmp/cache/assets
          key: ${{ runner.os }}-assets-${{ hashFiles('app/assets/**/*', 'app/javascript/**/*') }}
          restore-keys: |
            ${{ runner.os }}-assets-

      - name: "Setup test database"
        env:
          DATABASE_URL: "postgres://postgres:password@postgres:5432/test"
          RAILS_ENV: "test"
          PG_USER: "postgres"
        run: |
          cd spec/dummy
          bundle exec rails db:create
          bundle exec rails panda_core:install:migrations
          bundle exec rails db:migrate

      - name: "Compile assets"
        working-directory: spec/dummy
        env:
          DATABASE_URL: "postgres://postgres:password@postgres:5432/test"
          RAILS_ENV: test
        run: |
          bundle exec rake panda:cms:assets:compile
          echo "âœ… Asset compilation complete"
          echo "Assets in public directory:"
          ls -la public/panda-cms-assets/ || echo "No assets directory"

      - name: "Run specs"
        env:
          DATABASE_URL: "postgres://postgres:password@postgres:5432/test"
          RAILS_ENV: "test"
        run: |
          bundle exec rspec --tag ~skip

      - name: "Upload screenshots on failure"
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: screenshots
          path: ${{ github.workspace }}/spec/tmp/capybara
          if-no-files-found: ignore
